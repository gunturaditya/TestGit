// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebStudy1.Context;

#nullable disable

namespace WebStudy1.Migrations
{
    [DbContext(typeof(MyContext))]
    [Migration("20230411014709_firstInitialMigrations")]
    partial class firstInitialMigrations
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("WebStudy1.Models.Account", b =>
                {
                    b.Property<string>("Employee_nik")
                        .HasMaxLength(5)
                        .HasColumnType("char(5)")
                        .HasColumnName("employee_nik");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("password");

                    b.HasKey("Employee_nik");

                    b.ToTable("TB_M_Account");
                });

            modelBuilder.Entity("WebStudy1.Models.Account_Roles", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Account_nik")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("char(5)")
                        .HasColumnName("account_nik");

                    b.Property<int>("Role_id")
                        .HasColumnType("int")
                        .HasColumnName("role_id");

                    b.HasKey("Id");

                    b.HasIndex("Account_nik");

                    b.HasIndex("Role_id");

                    b.ToTable("TB_TR_Account_Roles");
                });

            modelBuilder.Entity("WebStudy1.Models.Educations", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Degree")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("degree");

                    b.Property<string>("Gpa")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("gpa");

                    b.Property<string>("Major")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("major");

                    b.Property<int>("Universitas_id")
                        .HasColumnType("int")
                        .HasColumnName("university_id");

                    b.HasKey("Id");

                    b.HasIndex("Universitas_id");

                    b.ToTable("TB_M_Educations");
                });

            modelBuilder.Entity("WebStudy1.Models.Employees", b =>
                {
                    b.Property<string>("Nik")
                        .HasMaxLength(5)
                        .HasColumnType("char(5)")
                        .HasColumnName("nik");

                    b.Property<DateTime>("Birthdate")
                        .HasColumnType("datetime")
                        .HasColumnName("birthdate");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("email");

                    b.Property<int>("EmployeeGender")
                        .HasColumnType("int")
                        .HasColumnName("gender");

                    b.Property<string>("First_name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("first_name");

                    b.Property<DateTime>("Hiring_date")
                        .HasColumnType("datetime")
                        .HasColumnName("hiring_date");

                    b.Property<string>("Last_name")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("last_name");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("phone_nummber");

                    b.HasKey("Nik");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("Phone")
                        .IsUnique();

                    b.ToTable("TB_M_Employees");
                });

            modelBuilder.Entity("WebStudy1.Models.Profilings", b =>
                {
                    b.Property<string>("Employee_Nik")
                        .HasMaxLength(5)
                        .HasColumnType("char(5)")
                        .HasColumnName("employee_nik");

                    b.Property<int>("Education_ID")
                        .HasColumnType("int")
                        .HasColumnName("education_id");

                    b.HasKey("Employee_Nik");

                    b.HasIndex("Education_ID")
                        .IsUnique();

                    b.ToTable("TB_TR_Profilings");
                });

            modelBuilder.Entity("WebStudy1.Models.Roles", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.ToTable("TB_M_Roles");
                });

            modelBuilder.Entity("WebStudy1.Models.Universities", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.ToTable("TB_M_Universities");
                });

            modelBuilder.Entity("WebStudy1.Models.Account", b =>
                {
                    b.HasOne("WebStudy1.Models.Employees", "Employee")
                        .WithOne("Account")
                        .HasForeignKey("WebStudy1.Models.Account", "Employee_nik")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("WebStudy1.Models.Account_Roles", b =>
                {
                    b.HasOne("WebStudy1.Models.Account", "Account")
                        .WithMany("AccountRoles")
                        .HasForeignKey("Account_nik")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebStudy1.Models.Roles", "Roles")
                        .WithMany("Account_Roles")
                        .HasForeignKey("Role_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");

                    b.Navigation("Roles");
                });

            modelBuilder.Entity("WebStudy1.Models.Educations", b =>
                {
                    b.HasOne("WebStudy1.Models.Universities", "Universities")
                        .WithMany("Educations")
                        .HasForeignKey("Universitas_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Universities");
                });

            modelBuilder.Entity("WebStudy1.Models.Profilings", b =>
                {
                    b.HasOne("WebStudy1.Models.Educations", "Educations")
                        .WithOne("Profiling")
                        .HasForeignKey("WebStudy1.Models.Profilings", "Education_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebStudy1.Models.Employees", "Employees")
                        .WithOne("Profiling")
                        .HasForeignKey("WebStudy1.Models.Profilings", "Employee_Nik")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Educations");

                    b.Navigation("Employees");
                });

            modelBuilder.Entity("WebStudy1.Models.Account", b =>
                {
                    b.Navigation("AccountRoles");
                });

            modelBuilder.Entity("WebStudy1.Models.Educations", b =>
                {
                    b.Navigation("Profiling")
                        .IsRequired();
                });

            modelBuilder.Entity("WebStudy1.Models.Employees", b =>
                {
                    b.Navigation("Account")
                        .IsRequired();

                    b.Navigation("Profiling")
                        .IsRequired();
                });

            modelBuilder.Entity("WebStudy1.Models.Roles", b =>
                {
                    b.Navigation("Account_Roles");
                });

            modelBuilder.Entity("WebStudy1.Models.Universities", b =>
                {
                    b.Navigation("Educations");
                });
#pragma warning restore 612, 618
        }
    }
}
